<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='world population' inline='true' name='federated.0n5jtmi1twvnad1bz62j91en64xt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world population' name='textscan.1avq9zu1wy7ht416kdz560zeavw2'>
            <connection class='textscan' directory='C:/Users/itsme/Desktop' filename='world population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1avq9zu1wy7ht416kdz560zeavw2' name='world population.csv' table='[world population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='string' name='country_code' ordinal='3' />
            <column datatype='real' name='1980' ordinal='4' />
            <column datatype='integer' name='2000' ordinal='5' />
            <column datatype='integer' name='2010' ordinal='6' />
            <column datatype='integer' name='2021' ordinal='7' />
            <column datatype='integer' name='2022' ordinal='8' />
            <column datatype='integer' name='2030' ordinal='9' />
            <column datatype='integer' name='2050' ordinal='10' />
            <column datatype='real' name='area' ordinal='11' />
            <column datatype='real' name='landAreaKm' ordinal='12' />
            <column datatype='real' name='growthRate' ordinal='13' />
            <column datatype='real' name='worldPercentage' ordinal='14' />
            <column datatype='real' name='density' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1avq9zu1wy7ht416kdz560zeavw2' name='world population.csv' table='[world population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='string' name='country_code' ordinal='3' />
            <column datatype='real' name='1980' ordinal='4' />
            <column datatype='integer' name='2000' ordinal='5' />
            <column datatype='integer' name='2010' ordinal='6' />
            <column datatype='integer' name='2021' ordinal='7' />
            <column datatype='integer' name='2022' ordinal='8' />
            <column datatype='integer' name='2030' ordinal='9' />
            <column datatype='integer' name='2050' ordinal='10' />
            <column datatype='real' name='area' ordinal='11' />
            <column datatype='real' name='landAreaKm' ordinal='12' />
            <column datatype='real' name='growthRate' ordinal='13' />
            <column datatype='real' name='worldPercentage' ordinal='14' />
            <column datatype='real' name='density' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1980</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1980]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>1980</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2021]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2021</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2030</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2030]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2030</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2050</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2050]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>2050</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landAreaKm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[landAreaKm]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>landAreaKm</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>growthRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[growthRate]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>growthRate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>worldPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[worldPercentage]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>worldPercentage</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[world population.csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ID' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='world population.csv' datatype='table' name='[__tableau_internal_object_id__].[world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754]' role='measure' type='quantitative' />
      <column caption='Area' datatype='real' name='[area]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
      <column caption='Growth Rate' datatype='real' name='[growthRate]' role='measure' type='quantitative' />
      <column caption='Land Area Km' datatype='real' name='[landAreaKm]' role='measure' type='quantitative' />
      <column caption='World Percentage' datatype='real' name='[worldPercentage]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='world population.csv' id='world population.csv_35BAE4EC5B204F9EA92E58CDB88F2754'>
            <properties context=''>
              <relation connection='textscan.1avq9zu1wy7ht416kdz560zeavw2' name='world population.csv' table='[world population#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Rank' ordinal='1' />
                  <column datatype='string' name='country' ordinal='2' />
                  <column datatype='string' name='country_code' ordinal='3' />
                  <column datatype='real' name='1980' ordinal='4' />
                  <column datatype='integer' name='2000' ordinal='5' />
                  <column datatype='integer' name='2010' ordinal='6' />
                  <column datatype='integer' name='2021' ordinal='7' />
                  <column datatype='integer' name='2022' ordinal='8' />
                  <column datatype='integer' name='2030' ordinal='9' />
                  <column datatype='integer' name='2050' ordinal='10' />
                  <column datatype='real' name='area' ordinal='11' />
                  <column datatype='real' name='landAreaKm' ordinal='12' />
                  <column datatype='real' name='growthRate' ordinal='13' />
                  <column datatype='real' name='worldPercentage' ordinal='14' />
                  <column datatype='real' name='density' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1980 Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Benton Sans SemiDemi'>Population Rankings 1980</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world population' name='federated.0n5jtmi1twvnad1bz62j91en64xt' />
          </datasources>
          <datasource-dependencies datasource='federated.0n5jtmi1twvnad1bz62j91en64xt'>
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:1980:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' />
              <text column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:1980:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
                <format attr='color' value='#606b76' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.1644198894500732' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</rows>
        <cols>[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]</cols>
      </table>
      <simple-id uuid='{986D7F9D-C37F-4DAE-92A5-8EE041428FBA}' />
    </worksheet>
    <worksheet name='2000 Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Benton Sans SemiDemi'>Population Rankings 2000</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world population' name='federated.0n5jtmi1twvnad1bz62j91en64xt' />
          </datasources>
          <datasource-dependencies datasource='federated.0n5jtmi1twvnad1bz62j91en64xt'>
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' />
              <text column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:2000:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#606b76' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1864088773727417' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</rows>
        <cols>[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]</cols>
      </table>
      <simple-id uuid='{5C91D06B-1761-4A9E-AB7E-F9782AC235F7}' />
    </worksheet>
    <worksheet name='2010 Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Benton Sans SemiDemi'>Population Rankings 2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world population' name='federated.0n5jtmi1twvnad1bz62j91en64xt' />
          </datasources>
          <datasource-dependencies datasource='federated.0n5jtmi1twvnad1bz62j91en64xt'>
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' />
              <text column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:2010:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#606b76' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</rows>
        <cols>[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]</cols>
      </table>
      <simple-id uuid='{9D3D7B30-1273-49F6-87A7-D1A5886B656F}' />
    </worksheet>
    <worksheet name='2021 Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Benton Sans SemiDemi'>Population Rankings 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world population' name='federated.0n5jtmi1twvnad1bz62j91en64xt' />
          </datasources>
          <datasource-dependencies datasource='federated.0n5jtmi1twvnad1bz62j91en64xt'>
            <column datatype='integer' name='[2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2021]' derivation='Sum' name='[sum:2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' />
              <text column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:2021:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#606b76' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</rows>
        <cols>[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]</cols>
      </table>
      <simple-id uuid='{1471E1D9-1B44-4465-A9DD-13C59E96BE5F}' />
    </worksheet>
    <worksheet name='2022 Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Benton Sans SemiDemi'>Population Rankings 2022 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world population' name='federated.0n5jtmi1twvnad1bz62j91en64xt' />
          </datasources>
          <datasource-dependencies datasource='federated.0n5jtmi1twvnad1bz62j91en64xt'>
            <column datatype='integer' name='[2022]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2022]' derivation='Sum' name='[sum:2022:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' />
              <text column='[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:2022:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#606b76' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</rows>
        <cols>[federated.0n5jtmi1twvnad1bz62j91en64xt].[sum:Rank:qk]</cols>
      </table>
      <simple-id uuid='{095ED06A-4A89-4117-931E-2E5BA153005F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98168' id='14' param='horz' type-v2='layout-flow' w='99034' x='483' y='916'>
            <zone h='98168' id='7' param='horz' type-v2='layout-flow' w='89378' x='483' y='916'>
              <zone h='98168' id='5' type-v2='layout-basic' w='89378' x='483' y='916'>
                <zone h='49084' id='10' name='2010 Rankings' w='22345' x='22827' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49084' id='11' name='2021 Rankings' w='44689' x='45172' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49084' id='12' name='2022 Rankings' w='89378' x='483' y='916'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49084' id='16' name='2000 Rankings' w='22344' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98168' id='13' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='916'>
              <zone h='27491' id='15' name='2022 Rankings' pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type-v2='color' w='9656' x='89861' y='916'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98168' id='17' param='vert' type-v2='layout-flow' w='99034' x='483' y='916'>
                <zone fixed-size='280' h='49084' id='12' is-fixed='true' name='2022 Rankings' w='89378' x='483' y='916'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27491' id='15' name='2022 Rankings' pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type-v2='color' w='9656' x='89861' y='916'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49084' id='16' is-fixed='true' name='2000 Rankings' w='22344' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49084' id='10' is-fixed='true' name='2010 Rankings' w='22345' x='22827' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49084' id='11' is-fixed='true' name='2021 Rankings' w='44689' x='45172' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D5BC007B-A601-44D7-9924-103F2312EF55}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='1980 Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country_code:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0E7F37A6-39C9-40D9-90AA-806226015BAF}' />
    </window>
    <window class='worksheet' name='2000 Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3E63A04-2BA7-4CA5-AA36-D3C20E6245A1}' />
    </window>
    <window class='worksheet' name='2010 Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D5D5C56-E347-47F3-9974-681BDA703D46}' />
    </window>
    <window class='worksheet' name='2021 Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E47A702-234E-423C-A358-43554B0A23CA}' />
    </window>
    <window class='worksheet' name='2022 Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05B8018A-B31D-43BA-B868-7233EC73A2AA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='2000 Rankings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2010 Rankings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2021 Rankings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2022 Rankings'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0n5jtmi1twvnad1bz62j91en64xt].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{C725AA1B-3DDB-4548-92C6-3CFB04CA7699}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1980 Rankings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2000 Rankings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2010 Rankings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2021 Rankings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2022 Rankings' width='192'>
      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
      /w81vk+9fB5aWgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
